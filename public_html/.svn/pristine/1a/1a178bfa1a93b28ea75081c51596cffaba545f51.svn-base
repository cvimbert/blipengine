/* global datas, _ */

var GameManager = function () {

    this.sprites = [];
    this.groups = [];
    this.groupStates = [];
    this.sequences = [];

    var manager = this;

    var Sprite = function (spriteDef) {

        this.spriteObj = $("#sprite-" + spriteDef.id);

        this.enable = function () {
            this.spriteObj.addClass("enabled");
        };

        this.disable = function () {
            this.spriteObj.removeClass("enabled");
        };
    };

    var SpritesGroup = function (groupDef) {

        var sprites = [];

        _.each(groupDef.sprites, function (spriteid) {
            sprites.push(manager.sprites[spriteid]);
        });

        this.showAll = function () {
            _.each(sprites, function (sprite) {
                sprite.enable();
            });
        };

        this.hideAll = function () {
            _.each(sprites, function (sprite) {
                sprite.disable();
            });
        };
    };

    var GroupState = function (stateDef) {

        var sprites = [];

        this.group = manager.groups[stateDef.group];

        _.each(stateDef.sprites, function (spriteid) {
            sprites.push(manager.sprites[spriteid]);
        });

        this.show = function () {
            _.each(sprites, function (sprite) {
                sprite.enable();
            });
        };
    };

    var Sequence = function (seqDef) {

        var steps = [];

        this.group = manager.groups[seqDef.group];

        _.each(seqDef.steps, function (stepid) {
            steps.push(manager.groupStates[stepid]);
        });

        this.launch = function (time) {
            var counter = 0;
            
            var interv = setInterval(function () {
                
                var step = steps[counter];
                step.group.hideAll();
                step.show();
                counter++;
                
                if (counter === steps.length) {
                    clearInterval(interv);
                }
                
            }, time);
        };
    };

    var obj = this;

    // indexation des donn√©es

    // sprites
    _.each(datas.layout.sprites, function (sp) {
        obj.sprites[sp.id] = new Sprite(sp);
    });

    // groups
    _.each(datas.layout.groups, function (group) {
        obj.groups[group.id] = new SpritesGroup(group);
    });

    //group states
    _.each(datas.layout.groupstates, function (state) {
        obj.groupStates[state.id] = new GroupState(state);
    });

    // sequences
    _.each(datas.layout.sequences, function (seq) {
        obj.sequences[seq.id] = new Sequence(seq);
    });
};


